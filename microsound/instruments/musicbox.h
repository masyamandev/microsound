
const int8_t musicboxWaveTable[] PROGMEM = {
	    0, 1, 4, 6, 9, 11, 13, 16, 18, 20, 22, 25, 28, 31, 34, 37,
	    40, 43, 45, 47, 50, 52, 55, 58, 61, 63, 66, 69, 72, 76, 79, 82,
	    85, 88, 90, 92, 95, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110,
	    111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 126, 126,
	    126, 126, 126, 125, 123, 122, 121, 120, 119, 118, 117, 116, 115, 115, 114, 113,
	    113, 112, 111, 110, 108, 106, 104, 102, 100, 97, 94, 90, 87, 83, 80, 76,
	    73, 69, 66, 62, 60, 57, 55, 52, 50, 48, 45, 43, 41, 38, 36, 32,
	    29, 25, 21, 17, 14, 9, 5, 1, -2, -7, -10, -13, -15, -18, -21, -23,
	    -25, -27, -29, -30, -32, -35, -37, -40, -42, -45, -48, -51, -54, -57, -61, -64,
	    -67, -69, -71, -73, -75, -77, -77, -78, -79, -79, -80, -81, -82, -82, -83, -84,
	    -84, -86, -87, -89, -90, -92, -93, -94, -95, -96, -97, -98, -98, -98, -98, -97,
	    -97, -97, -96, -96, -95, -94, -94, -94, -94, -95, -95, -96, -96, -96, -97, -97,
	    -98, -98, -98, -98, -97, -96, -96, -95, -94, -93, -92, -91, -90, -89, -88, -88,
	    -87, -87, -86, -86, -85, -85, -84, -84, -83, -82, -81, -80, -79, -78, -76, -74,
	    -72, -70, -69, -67, -65, -63, -62, -60, -58, -56, -55, -53, -52, -50, -48, -46,
	    -44, -41, -39, -36, -34, -31, -28, -25, -22, -19, -16, -13, -11, -8, -5, -3,
		0};// last value could be used for interpolation

const uint8_t musicboxVolumeTable[] PROGMEM = {
	    255, 226, 199, 191, 184, 160, 163, 178, 177, 166, 158, 156, 147, 141, 135, 131,
	    124, 118, 113, 107, 100, 95, 90, 85, 80, 75, 71, 67, 63, 59, 55, 51,
	    48, 45, 43, 40, 39, 36, 34, 30, 28, 27, 25, 24, 23, 22, 22, 20,
	    18, 18, 17, 16, 16, 15, 14, 14, 13, 12, 12, 11, 11, 10, 9, 9,
	    8,7,6,5,4,3,2,1,0};

void playMusicbox(waveChannel* channel, uint8_t data) {
	channel->waveStep = pgm_read_word(&frequencies[data]);
	channel->waveForm = musicboxWaveTable;

	channel->volumeForm = musicboxVolumeTable;
	channel->volumeFormLength = 72 - 1;
	channel->volumeTicksPerSample = 4;
	channel->volumeTicksCounter = 4;

	channel->currentVolume = channel->instrumentVolume;
}
